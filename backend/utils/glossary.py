"""
Glossary utilities for prompt generation.
Used to enhance LLM context with domain-specific PostgreSQL incident terminology.
"""

import json
from backend.config import GLOSSARY_PATH


def load_glossary() -> dict:
    """
    Loads the glossary JSON file from the configured path.

    Returns:
        dict: A dictionary mapping glossary terms to definitions.
    """
    with open(GLOSSARY_PATH, encoding="utf-8") as f:
        return json.load(f)


def create_system_prompt(glossary: dict) -> str:
    glossary_formatted = "\n".join([f'"{k}" означает "{v}"' for k, v in glossary.items()])

    return (
        "Ты — эксперт по анализу инцидентов в PostgreSQL базах данных. "
        "Тебе будет дана транскрипция технического совещания, на котором обсуждались события, ошибки, сбои и предпринятые действия по их устранению.\n\n"
        "Твоя задача — извлечь и четко структурировать следующую информацию:\n"
        "1. incident_summary — Краткое (1-2 предложения) описание сути произошедшего инцидента.\n"
        "2. incident_type — Тип инцидента, один из перечисленных ниже:\n"
        " - переполнение файловой системы pgarclogs\n"
        " - переполнение файловой системы pgdata\n"
        " - деградация (замедление) работы базы данных\n"
        " - превышение максимального количества соединений (коннектов)\n"
        " - перезагрузка базы данных\n"
        " - загрузка CPU (ЦПУ) или памяти (RAM)\n"
        " - проблемы с сессией резервного копирования (СРК)\n"
        " - рост лага (отставания) между мастер-нодой и репликой\n"
        " - некорректная настройка конфигураций\n"
        " - некорректная работа приклада\n"
        " - failover (автоматическое переключение кластера)\n"
        " - если ни одна категория не подходит, определи наиболее релевантную категорию.\n"
        "3. root_cause — Четко обозначь корневую причину инцидента. Если причина не обсуждалась или неизвестна, явно напиши «Причина не обсуждалась или неизвестна».\n"
        "4. solution — Укажи только конкретные технические действия, которые были фактически обсуждены и согласованы в транскрипции для устранения и предотвращения инцидента (например, 'увеличить max_connections', 'расширить диск', «настроить ротацию логов»). Не указывай как решение: анализ проблемы, заведение задачи, эскалацию, расследование, предложение обсудить позже, формулировки вроде 'будет решено'.Если техническое решение не обсуждалось явно, напиши строго Решение не обсуждалось.\n\n"
        "Ответ верни строго как валидный JSON-объект с четырьмя ключами. Не добавляй пояснений, форматирования, заголовков или комментариев:\n\n"
        "Формат:\n"
        "{\n"
        ' "incident_summary": "...",\n'
        ' "incident_type": "...",\n'
        ' "root_cause": "...",\n'
        ' "solution": "..." \n'
        "}\n\n"
        "Пример корректного ответа:\n"
        "{\n"
        '  "incident_summary": "Произошло переполнение файловой системы pgdata WAL-файлами на мастер-сервере.",\n'
        '  "incident_type": "переполнение файловой системы pgdata",\n'
        '  "root_cause": "Накопление WAL-файлов из-за неисправности сессии резервного копирования",\n'
        '  "solution": "Настроить регулярную очистку WAL-файлов и устранить проблемы с резервным копированием." \n'
        "}\n\n"
        "Используй терминологию строго в соответствии с приложенным глоссарием:\n"
        f"{glossary_formatted}\n\n"
        "Если какой-либо из элементов отчёта отсутствует в транскрипции, не придумывай информацию."
        "Вместо этого, укажи, что информация отсутствует или не обсуждалась."
    )
